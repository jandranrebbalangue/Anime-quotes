{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JOAN\\\\Documents\\\\react-projects\\\\beginner-react\\\\src\\\\App.js\";\nimport { AppBar, Button, Toolbar, Typography } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport DisplayAnime from './Anime.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  var _s = $RefreshSig$();\n\n  const AnimeQuotes = () => {\n    _s();\n\n    const [quote, setQuote] = useState('');\n    const [anime, setAnime] = useState([]);\n\n    const handleClick = e => {\n      e.preventDefault();\n      window.location.reload();\n    };\n\n    const pagination = () => {\n      axios.get('https://animechan.vercel.app/api/quotes/anime?title=haikyuu&?page=1', {\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Headers': 'Content-Type'\n        }\n      }).then(response => {\n        setAnime(response.data);\n        console.log(response.data);\n      });\n    };\n\n    const randomQuotes = () => {\n      axios.get('https://animechan.vercel.app/api/random', {\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Headers': 'Content-Type'\n        }\n      }).then(response => {\n        setQuote(response.data);\n        console.log(response.data);\n      });\n    };\n\n    useEffect(() => {\n      randomQuotes();\n    }, []);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"inherit\",\n            children: \"Anime Random quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Anime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: quote.quote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DisplayAnime, {\n          anime: anime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '15px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        onClick: handleClick,\n        children: \"Get Random Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(AnimeQuotes, \"iVv7663cXlRy1G1nDBFbC4k7pso=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(AnimeQuotes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/JOAN/Documents/react-projects/beginner-react/src/App.js"],"names":["AppBar","Button","Toolbar","Typography","useState","useEffect","axios","DisplayAnime","App","AnimeQuotes","quote","setQuote","anime","setAnime","handleClick","e","preventDefault","window","location","reload","pagination","get","headers","then","response","data","console","log","randomQuotes","marginTop"],"mappings":";AAAA,SAAQA,MAAR,EAAgBC,MAAhB,EAAwBC,OAAxB,EAAiCC,UAAjC,QAAkD,mBAAlD;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,YAAP,MAAyB,YAAzB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,UAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,UAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AACA,UAAMU,WAAW,GAAGC,CAAC,IAAI;AACvBA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAHD;;AAIA,UAAMC,UAAU,GAAG,MAAM;AACvBd,MAAAA,KAAK,CACFe,GADH,CAEI,qEAFJ,EAGI;AACEC,QAAAA,OAAO,EAAE;AACP,yCAA+B,GADxB;AAEP,0CAAgC;AAFzB;AADX,OAHJ,EAUGC,IAVH,CAUQC,QAAQ,IAAI;AAChBX,QAAAA,QAAQ,CAACW,QAAQ,CAACC,IAAV,CAAR;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACD,OAbH;AAcD,KAfD;;AAgBA,UAAMG,YAAY,GAAG,MAAM;AACzBtB,MAAAA,KAAK,CACFe,GADH,CACO,yCADP,EACkD;AAC9CC,QAAAA,OAAO,EAAE;AACP,yCAA+B,GADxB;AAEP,0CAAgC;AAFzB;AADqC,OADlD,EAOGC,IAPH,CAOQC,QAAQ,IAAI;AAChBb,QAAAA,QAAQ,CAACa,QAAQ,CAACC,IAAV,CAAR;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACD,OAVH;AAWD,KAZD;;AAcApB,IAAAA,SAAS,CAAC,MAAM;AACduB,MAAAA,YAAY;AACb,KAFQ,EAEN,EAFM,CAAT;AAGA,wBACE;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,QAAjB;AAAA,+BACE,QAAC,OAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,gCACE;AAAA,oBAAIlB,KAAK,CAACA;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AAAc,UAAA,KAAK,EAAEE;AAArB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAWE;AAAK,QAAA,KAAK,EAAE;AAACiB,UAAAA,SAAS,EAAE;AAAZ;AAAZ;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,OAAO,EAAEf,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD,GA/DD;;AADa,KACPL,WADO;;AAiEb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KAtEQD,G;AAwET,eAAeA,GAAf","sourcesContent":["import {AppBar, Button, Toolbar, Typography} from '@material-ui/core'\nimport {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport './App.css'\nimport DisplayAnime from './Anime.js'\nfunction App() {\n  const AnimeQuotes = () => {\n    const [quote, setQuote] = useState('')\n    const [anime, setAnime] = useState([])\n    const handleClick = e => {\n      e.preventDefault()\n      window.location.reload()\n    }\n    const pagination = () => {\n      axios\n        .get(\n          'https://animechan.vercel.app/api/quotes/anime?title=haikyuu&?page=1',\n          {\n            headers: {\n              'Access-Control-Allow-Origin': '*',\n              'Access-Control-Allow-Headers': 'Content-Type',\n            },\n          },\n        )\n        .then(response => {\n          setAnime(response.data)\n          console.log(response.data)\n        })\n    }\n    const randomQuotes = () => {\n      axios\n        .get('https://animechan.vercel.app/api/random', {\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Headers': 'Content-Type',\n          },\n        })\n        .then(response => {\n          setQuote(response.data)\n          console.log(response.data)\n        })\n    }\n\n    useEffect(() => {\n      randomQuotes()\n    }, [])\n    return (\n      <div>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography color=\"inherit\">Anime Random quote</Typography>\n            <Button>Anime</Button>\n          </Toolbar>\n        </AppBar>\n        <div>\n          <p>{quote.quote}</p>\n          <DisplayAnime anime={anime} />\n        </div>\n        <div style={{marginTop: '15px'}}></div>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          onClick={handleClick}\n        >\n          Get Random Quote\n        </Button>\n      </div>\n    )\n  }\n  return (\n    <div className=\"App\">\n      <AnimeQuotes />\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}